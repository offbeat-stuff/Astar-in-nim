/* Generated by the Nim Compiler v1.6.4 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI889192520 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI889192527 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI704643133 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1308622852 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555114 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555125 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555126 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1325400073 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1308622865 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1308622851 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1308622863 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1308622861 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI469762082 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1073741921 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1174405126 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555124 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554456 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1174405130 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1174405129 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33555128 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555130 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555121 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555083 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555165 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554439 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI33554440 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555164 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555112 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555113 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555120 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555122 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI33555122 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555122.node = NNI33555122;
var NNI33555120 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555120.node = NNI33555120;
var NNI33555113 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555113.node = NNI33555113;
NTI33555164.base = NTI33555112;
NTI33555165.base = NTI33555112;
var NNI33555112 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555164, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554440, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554439, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554439, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555165, name: "up", sons: null}]};
NTI33555112.node = NNI33555112;
var NNI33555083 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555083.node = NNI33555083;
NTI33555112.base = NTI33555083;
NTI33555113.base = NTI33555112;
NTI33555120.base = NTI33555113;
NTI33555122.base = NTI33555120;
var NNI33555121 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555121.node = NNI33555121;
NTI33555121.base = NTI33555120;
var NNI33555130 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555130.node = NNI33555130;
NTI33555130.base = NTI33555113;
var NNI33555128 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555128.node = NNI33555128;
NTI33555128.base = NTI33555113;
var NNI1174405130 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554456, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554456, name: "Field1", sons: null}]};
NTI1174405130.node = NNI1174405130;
NTI1174405129.base = NTI1174405130;
var NNI33555124 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555124.node = NNI33555124;
NTI33555124.base = NTI33555113;
var NNI1174405126 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554456, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554456, name: "Field1", sons: null}]};
NTI1174405126.node = NNI1174405126;
var NNI1073741921 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554456, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554456, name: "Field1", sons: null}]};
NTI1073741921.node = NNI1073741921;
NTI469762082.base = NTI1073741921;
var NNI1308622851 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1073741921, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554456, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554456, name: "Field2", sons: null}]};
NTI1308622851.node = NNI1308622851;
NTI1308622863.base = NTI1308622851;
var NNI1308622861 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1308622863, name: "data", sons: null}, 
{kind: 1, offset: "size", len: 0, typ: NTI33554456, name: "size", sons: null}, 
{kind: 1, offset: "comp", len: 0, typ: NTI1308622865, name: "comp", sons: null}]};
NTI1308622861.node = NNI1308622861;
var NNI1325400073 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1325400073.node = NNI1325400073;
NTI1325400073.base = NTI33555112;
var NNI33555126 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555126.node = NNI33555126;
var NNI33555125 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555125.node = NNI33555125;
var NNI33555114 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555114.node = NNI33555114;
NTI33555114.base = NTI33555112;
NTI33555125.base = NTI33555114;
NTI33555126.base = NTI33555125;
var NNI1308622852 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1073741921, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554456, name: "Field1", sons: null}]};
NTI1308622852.node = NNI1308622852;
var NNI704643133 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554456, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554456, name: "b", sons: null}]};
NTI704643133.node = NNI704643133;
var NNI889192527 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI889192520, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554456, name: "b", sons: null}]};
NTI889192527.node = NNI889192527;

function makeNimstrLit(c_33556802) {
      var result = [];
  for (var i = 0; i < c_33556802.length; ++i) {
    result[i] = c_33556802.charCodeAt(i);
  }
  return result;
  

  
}

function toJSStr(s_33556808) {
                    var Temporary5;
            var Temporary7;

  var result_33556809 = null;

    var res_33556843 = newSeq_33556826((s_33556808).length);
    var i_33556844 = 0;
    var j_33556845 = 0;
    Label1: do {
        Label2: while (true) {
        if (!(i_33556844 < (s_33556808).length)) break Label2;
          var c_33556846 = s_33556808[i_33556844];
          if ((c_33556846 < 128)) {
          res_33556843[j_33556845] = String.fromCharCode(c_33556846);
          i_33556844 += 1;
          }
          else {
            var helper_33556858 = newSeq_33556826(0);
            Label3: do {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556859 = c_33556846.toString(16);
                  if ((((code_33556859) == null ? 0 : (code_33556859).length) == 1)) {
                  helper_33556858.push("%0");;
                  }
                  else {
                  helper_33556858.push("%");;
                  }
                  
                  helper_33556858.push(code_33556859);;
                  i_33556844 += 1;
                    if (((s_33556808).length <= i_33556844)) Temporary5 = true; else {                      Temporary5 = (s_33556808[i_33556844] < 128);                    }                  if (Temporary5) {
                  break Label3;
                  }
                  
                  c_33556846 = s_33556808[i_33556844];
                }
            } while (false);
++excHandler;
            Temporary7 = framePtr;
            try {
            res_33556843[j_33556845] = decodeURIComponent(helper_33556858.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            framePtr = Temporary7;
            res_33556843[j_33556845] = helper_33556858.join("");
            lastJSError = prevJSError;
            } finally {
            framePtr = Temporary7;
            }
          }
          
          j_33556845 += 1;
        }
    } while (false);
    if (res_33556843.length < j_33556845) { for (var i = res_33556843.length ; i < j_33556845 ; ++i) res_33556843.push(null); }
               else { res_33556843.length = j_33556845; };
    result_33556809 = res_33556843.join("");

  return result_33556809;

}

function raiseException(e_33556668, ename_33556669) {
    e_33556668.name = ename_33556669;
    if ((excHandler == 0)) {
    unhandledException(e_33556668);
    }
    
    throw e_33556668;

  
}

function addInt(a_33556941, b_33556942) {
        var result = a_33556941 + b_33556942;
    checkOverflowInt(result);
    return result;
  

  
}

function divInt(a_33556953, b_33556954) {
        if (b_33556954 == 0) raiseDivByZero();
    if (b_33556954 == -1 && a_33556953 == 2147483647) raiseOverflow();
    return Math.trunc(a_33556953 / b_33556954);
  

  
}

function mulInt(a_33556949, b_33556950) {
        var result = a_33556949 * b_33556950;
    checkOverflowInt(result);
    return result;
  

  
}

function chckRange(i_33557190, a_33557191, b_33557192) {
      var Temporary1;

  var result_33557193 = 0;

  BeforeRet: do {
      if (!(a_33557191 <= i_33557190)) Temporary1 = false; else {        Temporary1 = (i_33557190 <= b_33557192);      }    if (Temporary1) {
    result_33557193 = i_33557190;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  } while (false);

  return result_33557193;

}

function mnewString(len_33556894) {
        return new Array(len_33556894);
  

  
}

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557141, src_33557142, ti_33557143) {
  var result_33557152 = null;

    switch (ti_33557143.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557132(ti_33557143))) {
      result_33557152 = src_33557142;
      }
      else {
        result_33557152 = [src_33557142[0], src_33557142[1]];
      }
      
      break;
    case 19:
            if (dest_33557141 === null || dest_33557141 === undefined) {
        dest_33557141 = {};
      }
      else {
        for (var key in dest_33557141) { delete dest_33557141[key]; }
      }
      for (var key in src_33557142) { dest_33557141[key] = src_33557142[key]; }
      result_33557152 = dest_33557141;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557143.base == null))) {
      result_33557152 = nimCopy(dest_33557141, src_33557142, ti_33557143.base);
      }
      else {
      if ((ti_33557143.kind == 17)) {
      result_33557152 = (dest_33557141 === null || dest_33557141 === undefined) ? {m_type: ti_33557143} : dest_33557141;
      }
      else {
        result_33557152 = (dest_33557141 === null || dest_33557141 === undefined) ? {} : dest_33557141;
      }
      }
      nimCopyAux(result_33557152, src_33557142, ti_33557143.node);
      break;
    case 24:
    case 4:
    case 27:
    case 16:
            if (src_33557142 === null) {
        result_33557152 = null;
      }
      else {
        if (dest_33557141 === null || dest_33557141 === undefined || dest_33557141.length != src_33557142.length) {
          dest_33557141 = new Array(src_33557142.length);
        }
        result_33557152 = dest_33557141;
        for (var i = 0; i < src_33557142.length; ++i) {
          result_33557152[i] = nimCopy(result_33557152[i], src_33557142[i], ti_33557143.base);
        }
      }
    
      break;
    case 28:
            if (src_33557142 !== null) {
        result_33557152 = src_33557142.slice(0);
      }
    
      break;
    default: 
      result_33557152 = src_33557142;
      break;
    }

  return result_33557152;

}

function chckIndx(i_33557185, a_33557186, b_33557187) {
      var Temporary1;

  var result_33557188 = 0;

  BeforeRet: do {
      if (!(a_33557186 <= i_33557185)) Temporary1 = false; else {        Temporary1 = (i_33557185 <= b_33557187);      }    if (Temporary1) {
    result_33557188 = i_33557185;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_33557185, a_33557186, b_33557187);
    }
    
  } while (false);

  return result_33557188;

}

function subInt(a_33556945, b_33556946) {
        var result = a_33556945 - b_33556946;
    checkOverflowInt(result);
    return result;
  

  
}
var ConstSet2 = setConstr(60, 62, 94);
var ConstSet3 = setConstr(60, 62, 94);
var ConstSet4 = setConstr(45, 43, 32);
var ConstSet5 = setConstr([48, 57]);
var ConstSet6 = setConstr([48, 57]);
var ConstSet7 = setConstr([48, 57]);
var ConstSet8 = setConstr([65, 90], [97, 122]);

function nimCharToStr(x_33556518) {
  var result_33556519 = [];

    result_33556519 = nimCopy(null, mnewString(1), NTI33554439);
    result_33556519[0] = x_33556518;

  return result_33556519;

}

function addChar(x_33557256, c_33557257) {
    x_33557256.push(c_33557257);

  
}
                    var colors_1073741949 = [makeNimstrLit("#009A17"), makeNimstrLit("#000"), makeNimstrLit("#9b7653")];

function modInt(a_33556957, b_33556958) {
        if (b_33556958 == 0) raiseDivByZero();
    if (b_33556958 == -1 && a_33556957 == 2147483647) raiseOverflow();
    return Math.trunc(a_33556957 % b_33556958);
  

  
}
if (!Math.trunc) {
  Math.trunc = function(v) {
    v = +v;
    if (!isFinite(v)) return v;
    return (v - v % 1) || (v < 0 ? -0 : v === 0 ? v : 0);
  };
}

var ctx_1023410179 = [null];
var state_1090519053 = [{a0: 1773455756, a1: 4275166512}];
if (globalThis.utcInstance_1107297665 === undefined) {
  globalThis.utcInstance_1107297665 = [null];
}
if (globalThis.localInstance_1107297666 === undefined) {
  globalThis.localInstance_1107297666 = [null];
}
var objectID_1207959714 = [0];

function nextPowerOfTwo_654311627(x_654311628) {
  var result_654311629 = 0;

    result_654311629 = (x_654311628 - 1);
    result_654311629 = (result_654311629 | (result_654311629 >> 16));
    result_654311629 = (result_654311629 | (result_654311629 >> 8));
    result_654311629 = (result_654311629 | (result_654311629 >> 4));
    result_654311629 = (result_654311629 | (result_654311629 >> 2));
    result_654311629 = (result_654311629 | (result_654311629 >> 1));
    result_654311629 += (1 + ((x_654311628 <= 0) ? 1 : 0));

  return result_654311629;

}

function add_33556420(x_33556421, x_33556421_Idx, y_33556422) {
          if (x_33556421[x_33556421_Idx] === null) { x_33556421[x_33556421_Idx] = []; }
      var off = x_33556421[x_33556421_Idx].length;
      x_33556421[x_33556421_Idx].length += y_33556422.length;
      for (var i = 0; i < y_33556422.length; ++i) {
        x_33556421[x_33556421_Idx][off+i] = y_33556422.charCodeAt(i);
      }
    

  
}

function newSeq_33556826(len_33556828) {
  var result_33556829 = [];

    result_33556829 = new Array(len_33556828); for (var i = 0 ; i < len_33556828 ; ++i) { result_33556829[i] = null; }
  return result_33556829;

}

function unhandledException(e_33556664) {
    var buf_33556665 = [[]];
    if (!(((e_33556664.message).length == 0))) {
    buf_33556665[0].push.apply(buf_33556665[0], makeNimstrLit("Error: unhandled exception: "));;
    buf_33556665[0].push.apply(buf_33556665[0], e_33556664.message);;
    }
    else {
    buf_33556665[0].push.apply(buf_33556665[0], makeNimstrLit("Error: unhandled exception"));;
    }
    
    buf_33556665[0].push.apply(buf_33556665[0], makeNimstrLit(" ["));;
    add_33556420(buf_33556665, 0, e_33556664.name);
    buf_33556665[0].push.apply(buf_33556665[0], makeNimstrLit("]\x0A"));;
    var cbuf_33556666 = toJSStr(buf_33556665[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556666);
  }
  else {
    throw cbuf_33556666;
  }
  

  
}

function raiseOverflow() {
    raiseException({message: makeNimstrLit("over- or underflow"), parent: null, m_type: NTI33555122, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_33556939) {
        if (a_33556939 > 2147483647 || a_33556939 < -2147483648) raiseOverflow();
  

  
}

function raiseDivByZero() {
    raiseException({message: makeNimstrLit("division by zero"), parent: null, m_type: NTI33555121, name: null, trace: [], up: null}, "DivByZeroDefect");

  
}

function slotsNeeded_1191182378(count_1191182379) {
  var result_1191182380 = 0;

    result_1191182380 = nextPowerOfTwo_654311627(addInt(divInt(mulInt(count_1191182379, 3), 2), 4));

  return result_1191182380;

}

function raiseRangeError() {
    raiseException({message: makeNimstrLit("value out of range"), parent: null, m_type: NTI33555130, name: null, trace: [], up: null}, "RangeDefect");

  
}

function initTable_1174405122(initialSize_1174405125) {
  var result_1174405131 = ({data: [], counter: 0});

    var correctSizeHEX60gensym0_1174405133 = slotsNeeded_1191182378(chckRange(initialSize_1174405125, 0, 2147483647));
    result_1174405131.counter = 0;
    result_1174405131.data = new Array(chckRange(correctSizeHEX60gensym0_1174405133, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym0_1174405133, 0, 2147483647) ; ++i) { result_1174405131.data[i] = {Field0: 0, Field1: {Field0: 0, Field1: 0}, Field2: []}; }
  return result_1174405131;

}

function HEX21HEX26_1207959555(h_1207959556, val_1207959557) {
  var result_1207959558 = 0;

    var h_1207959559 = (h_1207959556 >>> 0);
    var val_1207959560 = (val_1207959557 >>> 0);
    var res_1207959561 = ((h_1207959559 + val_1207959560) >>> 0);
    res_1207959561 = ((res_1207959561 + (res_1207959561 << 10)) >>> 0);
    res_1207959561 = (res_1207959561 ^ (res_1207959561 >>> 6));
    result_1207959558 = (res_1207959561 | 0);

  return result_1207959558;

}

function hasJsBigInt_822083627() {
  var result_822083628 = false;

    result_822083628 = typeof BigInt != 'undefined'

  return result_822083628;

}

function hiXorLoJs_1207959637(a_1207959638, b_1207959639) {
  var result_1207959640 = 0n;

    var prod_1207959641 = (a_1207959638 * b_1207959639);
    var mask_1207959642 = BigInt("0xffffffffffffffff");
    result_1207959640 = ((prod_1207959641 >> BigInt("64")) ^ (prod_1207959641 & mask_1207959642));

  return result_1207959640;

}

function hashWangYi1_1207959730(x_1207959732) {
  var result_1207959733 = 0;

    if (hasJsBigInt_822083627()) {
    var P0HEX60gensym6_1207959752 = BigInt("0xa0761d6478bd642f");
    var P1HEX60gensym6_1207959753 = BigInt("0xe7037ed1a0b428db");
    var P58HEX60gensym6_1207959754 = BigInt("0xeb44accab455d16d");
    var resHEX60gensym6_1207959755 = hiXorLoJs_1207959637(hiXorLoJs_1207959637(P0HEX60gensym6_1207959752, (BigInt(x_1207959732) ^ P1HEX60gensym6_1207959753)), P58HEX60gensym6_1207959754);
    result_1207959733 = Number((() => { const i = resHEX60gensym6_1207959755, b = 32; return BigInt.asIntN(b, i) })());
    }
    else {
      result_1207959733 = (x_1207959732 & 4294967295);
    }
    

  return result_1207959733;

}

function hash_1207959722(x_1207959724) {
  var result_1207959725 = 0;

    result_1207959725 = hashWangYi1_1207959730(x_1207959724);

  return result_1207959725;

}

function HEX21HEX24_1207959570(h_1207959571) {
  var result_1207959572 = 0;

    var h_1207959573 = (h_1207959571 >>> 0);
    var res_1207959578 = ((h_1207959573 + (h_1207959573 << 3)) >>> 0);
    res_1207959578 = (res_1207959578 ^ (res_1207959578 >>> 11));
    res_1207959578 = ((res_1207959578 + (res_1207959578 << 15)) >>> 0);
    result_1207959572 = (res_1207959578 | 0);

  return result_1207959572;

}

function hash_1174405265(x_1174405267) {
  var result_1174405268 = 0;

    result_1174405268 = HEX21HEX26_1207959555(result_1174405268, hash_1207959722(x_1174405267["Field0"]));
    result_1174405268 = HEX21HEX26_1207959555(result_1174405268, hash_1207959722(x_1174405267["Field1"]));
    result_1174405268 = HEX21HEX24_1207959570(result_1174405268);

  return result_1174405268;

}

function isFilled_1191182367(hcode_1191182368) {
  var result_1191182369 = false;

    result_1191182369 = !((hcode_1191182368 == 0));

  return result_1191182369;

}

function addChars_251658415(result_251658417, result_251658417_Idx, x_251658418, start_251658419, n_251658420) {
    var old_251658421 = (result_251658417[result_251658417_Idx]).length;
    (result_251658417[result_251658417_Idx].length = chckRange(addInt(old_251658421, n_251658420), 0, 2147483647));
    Label1: do {
      var iHEX60gensym4_251658435 = 0;
      var i_1174407897 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_1174407897 < n_251658420)) break Label3;
            iHEX60gensym4_251658435 = i_1174407897;
            result_251658417[result_251658417_Idx][chckIndx(addInt(old_251658421, iHEX60gensym4_251658435), 0, (result_251658417[result_251658417_Idx]).length - 1)] = x_251658418.charCodeAt(chckIndx(addInt(start_251658419, iHEX60gensym4_251658435), 0, (x_251658418).length - 1));
            i_1174407897 = addInt(i_1174407897, 1);
          }
      } while (false);
    } while (false);

  
}

function addChars_251658411(result_251658413, result_251658413_Idx, x_251658414) {
    addChars_251658415(result_251658413, result_251658413_Idx, x_251658414, 0, ((x_251658414) == null ? 0 : (x_251658414).length));

  
}

function addInt_251658436(result_251658437, result_251658437_Idx, x_251658438) {
    addChars_251658411(result_251658437, result_251658437_Idx, ((x_251658438) + ""));

  
}

function addInt_251658457(result_251658458, result_251658458_Idx, x_251658459) {
    addInt_251658436(result_251658458, result_251658458_Idx, x_251658459);

  
}

function HEX24_335544323(x_335544324) {
  var result_335544325 = [[]];

    addInt_251658457(result_335544325, 0, x_335544324);

  return result_335544325[0];

}

function isFatPointer_33557132(ti_33557133) {
  var result_33557134 = false;

  BeforeRet: do {
    result_33557134 = !((ConstSet1[ti_33557133.base.kind] != undefined));
    break BeforeRet;
  } while (false);

  return result_33557134;

}

function nimCopyAux(dest_33557145, src_33557146, n_33557147) {
    switch (n_33557147.kind) {
    case 0:
      break;
    case 1:
            dest_33557145[n_33557147.offset] = nimCopy(dest_33557145[n_33557147.offset], src_33557146[n_33557147.offset], n_33557147.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557147.sons.length; i++) {
      nimCopyAux(dest_33557145, src_33557146, n_33557147.sons[i]);
    }
    
      break;
    case 3:
            dest_33557145[n_33557147.offset] = nimCopy(dest_33557145[n_33557147.offset], src_33557146[n_33557147.offset], n_33557147.typ);
      for (var i = 0; i < n_33557147.sons.length; ++i) {
        nimCopyAux(dest_33557145, src_33557146, n_33557147.sons[i][1]);
      }
    
      break;
    }

  
}

function raiseIndexError(i_33556755, a_33556756, b_33556757) {
    var Temporary1;

    if ((b_33556757 < a_33556756)) {
    Temporary1 = makeNimstrLit("index out of bounds, the container is empty");
    }
    else {
    Temporary1 = (makeNimstrLit("index ") || []).concat(HEX24_335544323(i_33556755) || [],makeNimstrLit(" not in ") || [],HEX24_335544323(a_33556756) || [],makeNimstrLit(" .. ") || [],HEX24_335544323(b_33556757) || []);
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554439), parent: null, m_type: NTI33555128, name: null, trace: [], up: null}, "IndexDefect");

  
}

function HEX3DHEX3D_1174405489(x_1174405491, y_1174405492) {
  var result_1174405493 = false;

  BeforeRet: do {
    if (!((x_1174405491["Field0"] == y_1174405492["Field0"]))) {
    result_1174405493 = false;
    break BeforeRet;
    }
    
    if (!((x_1174405491["Field1"] == y_1174405492["Field1"]))) {
    result_1174405493 = false;
    break BeforeRet;
    }
    
    result_1174405493 = true;
    break BeforeRet;
  } while (false);

  return result_1174405493;

}

function nextTry_1191182370(h_1191182371, maxHash_1191182372) {
  var result_1191182373 = 0;

    result_1191182373 = (addInt(h_1191182371, 1) & maxHash_1191182372);

  return result_1191182373;

}

function rawGet_1174405258(t_1174405261, key_1174405262, hc_1174405263, hc_1174405263_Idx) {
            var Temporary3;

  var result_1174405264 = 0;

  BeforeRet: do {
    hc_1174405263[hc_1174405263_Idx] = hash_1174405265(key_1174405262);
    if ((hc_1174405263[hc_1174405263_Idx] == 0)) {
    hc_1174405263[hc_1174405263_Idx] = 314159265;
    }
    
    if (((t_1174405261.data).length == 0)) {
    result_1174405264 = -1;
    break BeforeRet;
    }
    
    var h_1174405329 = (hc_1174405263[hc_1174405263_Idx] & (t_1174405261.data).length - 1);
    Label1: do {
        Label2: while (true) {
        if (!isFilled_1191182367(t_1174405261.data[chckIndx(h_1174405329, 0, (t_1174405261.data).length - 1)].Field0)) break Label2;
            if (!(t_1174405261.data[chckIndx(h_1174405329, 0, (t_1174405261.data).length - 1)].Field0 == hc_1174405263[hc_1174405263_Idx])) Temporary3 = false; else {              Temporary3 = HEX3DHEX3D_1174405489(t_1174405261.data[chckIndx(h_1174405329, 0, (t_1174405261.data).length - 1)].Field1, key_1174405262);            }          if (Temporary3) {
          result_1174405264 = h_1174405329;
          break BeforeRet;
          }
          
          h_1174405329 = nextTry_1191182370(h_1174405329, (t_1174405261.data).length - 1);
        }
    } while (false);
    result_1174405264 = subInt(-1, h_1174405329);
  } while (false);

  return result_1174405264;

}

function sysFatal_218103842(message_218103845) {
    raiseException({message: nimCopy(null, message_218103845, NTI33554439), m_type: NTI33555124, parent: null, name: null, trace: [], up: null}, "AssertionDefect");

  
}

function raiseAssert_218103840(msg_218103841) {
    sysFatal_218103842(msg_218103841);

  
}

function failedAssertImpl_218103864(msg_218103865) {
    raiseAssert_218103840(msg_218103865);

  
}

function mustRehash_1174405618(t_1174405620) {
  var result_1174405621 = false;

    if (!((t_1174405620.counter < (t_1174405620.data).length))) {
    failedAssertImpl_218103864(makeNimstrLit("hashcommon.nim(29, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_1174405621 = ((mulInt((t_1174405620.data).length, 2) < mulInt(t_1174405620.counter, 3)) || (subInt((t_1174405620.data).length, t_1174405620.counter) < 4));

  return result_1174405621;

}

function rawInsert_1174406067(t_1174406071, data_1174406072, data_1174406072_Idx, key_1174406073, val_1174406074, hc_1174406075, h_1174406076) {
    data_1174406072[data_1174406072_Idx][chckIndx(h_1174406076, 0, (data_1174406072[data_1174406072_Idx]).length - 1)].Field1 = nimCopy(data_1174406072[data_1174406072_Idx][chckIndx(h_1174406076, 0, (data_1174406072[data_1174406072_Idx]).length - 1)].Field1, key_1174406073, NTI1174405126);
    data_1174406072[data_1174406072_Idx][chckIndx(h_1174406076, 0, (data_1174406072[data_1174406072_Idx]).length - 1)].Field2 = nimCopy(null, val_1174406074, NTI1174405129);
    data_1174406072[data_1174406072_Idx][chckIndx(h_1174406076, 0, (data_1174406072[data_1174406072_Idx]).length - 1)].Field0 = hc_1174406075;

  
}

function enlarge_1174405773(t_1174405776) {
    var n_1174405779 = [];
    n_1174405779 = new Array(chckRange(mulInt((t_1174405776.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1174405776.data).length, 2), 0, 2147483647) ; ++i) { n_1174405779[i] = {Field0: 0, Field1: {Field0: 0, Field1: 0}, Field2: []}; }    var Temporary1 = t_1174405776.data; t_1174405776.data = n_1174405779; n_1174405779 = Temporary1;    Label2: do {
      var i_1174405843 = 0;
      var colontmp__1174407901 = 0;
      colontmp__1174407901 = (n_1174405779).length - 1;
      var res_1174407903 = 0;
      Label3: do {
          Label4: while (true) {
          if (!(res_1174407903 <= colontmp__1174407901)) break Label4;
            i_1174405843 = res_1174407903;
            var eh_1174405897 = n_1174405779[chckIndx(i_1174405843, 0, (n_1174405779).length - 1)].Field0;
            if (isFilled_1191182367(eh_1174405897)) {
            var j_1174405901 = (eh_1174405897 & (t_1174405776.data).length - 1);
            Label5: do {
                Label6: while (true) {
                if (!isFilled_1191182367(t_1174405776.data[chckIndx(j_1174405901, 0, (t_1174405776.data).length - 1)].Field0)) break Label6;
                  j_1174405901 = nextTry_1191182370(j_1174405901, (t_1174405776.data).length - 1);
                }
            } while (false);
            rawInsert_1174406067(t_1174405776, t_1174405776, "data", n_1174405779[chckIndx(i_1174405843, 0, (n_1174405779).length - 1)].Field1, n_1174405779[chckIndx(i_1174405843, 0, (n_1174405779).length - 1)].Field2, eh_1174405897, j_1174405901);
            }
            
            res_1174407903 = addInt(res_1174407903, 1);
          }
      } while (false);
    } while (false);

  
}

function rawGetKnownHC_1174406245(t_1174406248, key_1174406249, hc_1174406250) {
  var result_1174406251 = 0;

  BeforeRet: do {
    if (((t_1174406248.data).length == 0)) {
    result_1174406251 = -1;
    break BeforeRet;
    }
    
    var h_1174406302 = (hc_1174406250 & (t_1174406248.data).length - 1);
    Label1: do {
        Label2: while (true) {
        if (!isFilled_1191182367(t_1174406248.data[chckIndx(h_1174406302, 0, (t_1174406248.data).length - 1)].Field0)) break Label2;
          if (((t_1174406248.data[chckIndx(h_1174406302, 0, (t_1174406248.data).length - 1)].Field0 == hc_1174406250) && HEX3DHEX3D_1174405489(t_1174406248.data[chckIndx(h_1174406302, 0, (t_1174406248.data).length - 1)].Field1, key_1174406249))) {
          result_1174406251 = h_1174406302;
          break BeforeRet;
          }
          
          h_1174406302 = nextTry_1191182370(h_1174406302, (t_1174406248.data).length - 1);
        }
    } while (false);
    result_1174406251 = subInt(-1, h_1174406302);
  } while (false);

  return result_1174406251;

}

function HEX5BHEX5DHEX3D_1174405197(t_1174405200, key_1174405201, val_1174405202) {
    if (((t_1174405200.data).length == 0)) {
    var correctSizeHEX60gensym3_1174405252 = slotsNeeded_1191182378(32);
    t_1174405200.counter = 0;
    t_1174405200.data = new Array(chckRange(correctSizeHEX60gensym3_1174405252, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym3_1174405252, 0, 2147483647) ; ++i) { t_1174405200.data[i] = {Field0: 0, Field1: {Field0: 0, Field1: 0}, Field2: []}; }    }
    
    var hc_1174405257 = [0];
    var index_1174405511 = rawGet_1174405258(t_1174405200, key_1174405201, hc_1174405257, 0);
    if ((0 <= index_1174405511)) {
    t_1174405200.data[chckIndx(index_1174405511, 0, (t_1174405200.data).length - 1)].Field2 = nimCopy(null, val_1174405202, NTI1174405129);
    }
    else {
      if (((t_1174405200.data).length == 0)) {
      var correctSizeHEX60gensym8_1174405613 = slotsNeeded_1191182378(32);
      t_1174405200.counter = 0;
      t_1174405200.data = new Array(chckRange(correctSizeHEX60gensym8_1174405613, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym8_1174405613, 0, 2147483647) ; ++i) { t_1174405200.data[i] = {Field0: 0, Field1: {Field0: 0, Field1: 0}, Field2: []}; }      }
      
      if (mustRehash_1174405618(t_1174405200)) {
      enlarge_1174405773(t_1174405200);
      index_1174405511 = rawGetKnownHC_1174406245(t_1174405200, key_1174405201, hc_1174405257[0]);
      }
      
      index_1174405511 = subInt(-1, index_1174405511);
      rawInsert_1174406067(t_1174405200, t_1174405200, "data", key_1174405201, val_1174405202, hc_1174405257[0], index_1174405511);
      t_1174405200.counter = addInt(t_1174405200.counter, 1);
    }
    

  
}
var pointTable_1174405147 = [initTable_1174405122(32)];
var surroundingPoints_1174405152 = [[{Field0: 0, Field1: -1}, {Field0: 0, Field1: 1}, {Field0: 0, Field1: -2}, {Field0: 0, Field1: 2}, {Field0: 0, Field1: -3}, {Field0: 0, Field1: 3}, {Field0: 1, Field1: 0}, {Field0: -1, Field1: 0}, {Field0: 1, Field1: -1}, {Field0: 1, Field1: 1}, {Field0: -1, Field1: 1}, {Field0: -1, Field1: -1}, {Field0: 1, Field1: -2}, {Field0: 1, Field1: 2}, {Field0: -1, Field1: 2}, {Field0: -1, Field1: -2}, {Field0: 2, Field1: 0}, {Field0: -2, Field1: 0}, {Field0: 2, Field1: -1}, {Field0: 2, Field1: 1}, {Field0: -2, Field1: 1}, {Field0: -2, Field1: -1}, {Field0: 2, Field1: -2}, {Field0: 2, Field1: 2}, {Field0: -2, Field1: 2}, {Field0: -2, Field1: -2}, {Field0: 3, Field1: 0}, {Field0: -3, Field1: 0}]];
HEX5BHEX5DHEX3D_1174405197(pointTable_1174405147[0], {Field0: 0, Field1: -1}, []);
HEX5BHEX5DHEX3D_1174405197(pointTable_1174405147[0], {Field0: 0, Field1: 1}, []);
HEX5BHEX5DHEX3D_1174405197(pointTable_1174405147[0], {Field0: 0, Field1: -2}, [{Field0: 0, Field1: -1}]);
HEX5BHEX5DHEX3D_1174405197(pointTable_1174405147[0], {Field0: 0, Field1: 2}, [{Field0: 0, Field1: 1}]);
HEX5BHEX5DHEX3D_1174405197(pointTable_1174405147[0], {Field0: 0, Field1: -3}, [{Field0: 0, Field1: -1}, {Field0: 0, Field1: -2}]);
HEX5BHEX5DHEX3D_1174405197(pointTable_1174405147[0], {Field0: 0, Field1: 3}, [{Field0: 0, Field1: 1}, {Field0: 0, Field1: 2}]);
HEX5BHEX5DHEX3D_1174405197(pointTable_1174405147[0], {Field0: 1, Field1: 0}, []);
HEX5BHEX5DHEX3D_1174405197(pointTable_1174405147[0], {Field0: -1, Field1: 0}, []);
HEX5BHEX5DHEX3D_1174405197(pointTable_1174405147[0], {Field0: 1, Field1: -1}, [{Field0: 0, Field1: -1}, {Field0: 1, Field1: 0}]);
HEX5BHEX5DHEX3D_1174405197(pointTable_1174405147[0], {Field0: 1, Field1: 1}, [{Field0: 0, Field1: 1}, {Field0: 1, Field1: 0}]);
HEX5BHEX5DHEX3D_1174405197(pointTable_1174405147[0], {Field0: -1, Field1: 1}, [{Field0: 0, Field1: 1}, {Field0: -1, Field1: 0}]);
HEX5BHEX5DHEX3D_1174405197(pointTable_1174405147[0], {Field0: -1, Field1: -1}, [{Field0: 0, Field1: -1}, {Field0: -1, Field1: 0}]);
HEX5BHEX5DHEX3D_1174405197(pointTable_1174405147[0], {Field0: 1, Field1: -2}, [{Field0: 0, Field1: -1}, {Field0: 0, Field1: -2}, {Field0: 1, Field1: 0}, {Field0: 1, Field1: -1}]);
HEX5BHEX5DHEX3D_1174405197(pointTable_1174405147[0], {Field0: 1, Field1: 2}, [{Field0: 0, Field1: 1}, {Field0: 0, Field1: 2}, {Field0: 1, Field1: 0}, {Field0: 1, Field1: 1}]);
HEX5BHEX5DHEX3D_1174405197(pointTable_1174405147[0], {Field0: -1, Field1: 2}, [{Field0: 0, Field1: 1}, {Field0: 0, Field1: 2}, {Field0: -1, Field1: 0}, {Field0: -1, Field1: 1}]);
HEX5BHEX5DHEX3D_1174405197(pointTable_1174405147[0], {Field0: -1, Field1: -2}, [{Field0: 0, Field1: -1}, {Field0: 0, Field1: -2}, {Field0: -1, Field1: 0}, {Field0: -1, Field1: -1}]);
HEX5BHEX5DHEX3D_1174405197(pointTable_1174405147[0], {Field0: 2, Field1: 0}, [{Field0: 1, Field1: 0}]);
HEX5BHEX5DHEX3D_1174405197(pointTable_1174405147[0], {Field0: -2, Field1: 0}, [{Field0: -1, Field1: 0}]);
HEX5BHEX5DHEX3D_1174405197(pointTable_1174405147[0], {Field0: 2, Field1: -1}, [{Field0: 0, Field1: -1}, {Field0: 1, Field1: 0}, {Field0: 1, Field1: -1}, {Field0: 2, Field1: 0}]);
HEX5BHEX5DHEX3D_1174405197(pointTable_1174405147[0], {Field0: 2, Field1: 1}, [{Field0: 0, Field1: 1}, {Field0: 1, Field1: 0}, {Field0: 1, Field1: 1}, {Field0: 2, Field1: 0}]);
HEX5BHEX5DHEX3D_1174405197(pointTable_1174405147[0], {Field0: -2, Field1: 1}, [{Field0: 0, Field1: 1}, {Field0: -1, Field1: 0}, {Field0: -1, Field1: 1}, {Field0: -2, Field1: 0}]);
HEX5BHEX5DHEX3D_1174405197(pointTable_1174405147[0], {Field0: -2, Field1: -1}, [{Field0: 0, Field1: -1}, {Field0: -1, Field1: 0}, {Field0: -1, Field1: -1}, {Field0: -2, Field1: 0}]);
HEX5BHEX5DHEX3D_1174405197(pointTable_1174405147[0], {Field0: 2, Field1: -2}, [{Field0: 0, Field1: -1}, {Field0: 1, Field1: 0}, {Field0: 1, Field1: -1}, {Field0: 1, Field1: -2}, {Field0: 2, Field1: -1}]);
HEX5BHEX5DHEX3D_1174405197(pointTable_1174405147[0], {Field0: 2, Field1: 2}, [{Field0: 0, Field1: 1}, {Field0: 1, Field1: 0}, {Field0: 1, Field1: 1}, {Field0: 1, Field1: 2}, {Field0: 2, Field1: 1}]);
HEX5BHEX5DHEX3D_1174405197(pointTable_1174405147[0], {Field0: -2, Field1: 2}, [{Field0: 0, Field1: 1}, {Field0: -1, Field1: 0}, {Field0: -1, Field1: 1}, {Field0: -1, Field1: 2}, {Field0: -2, Field1: 1}]);
HEX5BHEX5DHEX3D_1174405197(pointTable_1174405147[0], {Field0: -2, Field1: -2}, [{Field0: 0, Field1: -1}, {Field0: -1, Field1: 0}, {Field0: -1, Field1: -1}, {Field0: -1, Field1: -2}, {Field0: -2, Field1: -1}]);
HEX5BHEX5DHEX3D_1174405197(pointTable_1174405147[0], {Field0: 3, Field1: 0}, [{Field0: 1, Field1: 0}, {Field0: 2, Field1: 0}]);
HEX5BHEX5DHEX3D_1174405197(pointTable_1174405147[0], {Field0: -3, Field1: 0}, [{Field0: -1, Field1: 0}, {Field0: -2, Field1: 0}]);

function newSeq_1073741843(len_1073741845) {
  var result_1073741846 = [];

    result_1073741846 = new Array(len_1073741845); for (var i = 0 ; i < len_1073741845 ; ++i) { result_1073741846[i] = 0; }
  return result_1073741846;

}
var map_1073741869 = [newSeq_1073741843(2304)];
var notWall_1073742037 = [0, 2];

function use_1023410189(c_1023410190) {
    ctx_1023410179[0] = c_1023410190;

  
}
var cvs_469762056 = [document.getElementById("canvas")];
cvs_469762056[0].width = window.innerWidth;
cvs_469762056[0].height = window.innerHeight;
var w_469762057 = [cvs_469762056[0].width];
var h_469762058 = [cvs_469762056[0].height];
var ctx_469762059 = [cvs_469762056[0].getContext('2d')];
use_1023410189(ctx_469762059[0]);

function newSeq_469762087(len_469762089) {
  var result_469762090 = [];

    result_469762090 = new Array(len_469762089); for (var i = 0 ; i < len_469762089 ; ++i) { result_469762090[i] = {Field0: 0, Field1: 0}; }
  return result_469762090;

}
var start_469762079 = [nimCopy(null, {Field0: 1, Field1: 2}, NTI1073741921)];
var goal_469762080 = [nimCopy(null, {Field0: 6, Field1: 1}, NTI1073741921)];
var progress_469762081 = [0];
var s_469762082 = [0.0];
var points_469762095 = [newSeq_469762087(0)];

function mapToMap_469762131(x_469762132, y_469762133) {
  var result_469762134 = {Field0: 0, Field1: 0};

  BeforeRet: do {
    var colontmp__469762185 = (((x_469762132 / s_469762082[0])) | 0);
    var colontmp__469762186 = (((y_469762133 / s_469762082[0])) | 0);
    result_469762134 = nimCopy(result_469762134, {Field0: colontmp__469762185, Field1: colontmp__469762186}, NTI1073741921);
    break BeforeRet;
  } while (false);

  return result_469762134;

}

function newSeq_1308622881(len_1308622883) {
  var result_1308622884 = [];

    result_1308622884 = new Array(len_1308622883); for (var i = 0 ; i < len_1308622883 ; ++i) { result_1308622884[i] = {Field0: {Field0: 0, Field1: 0}, Field1: 0, Field2: 0}; }
  return result_1308622884;

}

function newHeap_1308622867(comparator_1308622871) {
  var result_1308622879 = ({data: [], size: 0, comp: null});

    result_1308622879 = nimCopy(result_1308622879, {data: newSeq_1308622881(0), size: 0, comp: comparator_1308622871}, NTI1308622861);

  return result_1308622879;

}

function cmp_33557829(x_33557831, y_33557832) {
  var result_33557833 = 0;

  BeforeRet: do {
    if ((x_33557831 == y_33557832)) {
    result_33557833 = 0;
    break BeforeRet;
    }
    
    if ((x_33557831 < y_33557832)) {
    result_33557833 = -1;
    break BeforeRet;
    }
    
    result_33557833 = 1;
    break BeforeRet;
  } while (false);

  return result_33557833;

}

function initTable_1308622934(initialSize_1308622937) {
  var result_1308622943 = ({data: [], counter: 0});

    var correctSizeHEX60gensym0_1308622945 = slotsNeeded_1191182378(chckRange(initialSize_1308622937, 0, 2147483647));
    result_1308622943.counter = 0;
    result_1308622943.data = new Array(chckRange(correctSizeHEX60gensym0_1308622945, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym0_1308622945, 0, 2147483647) ; ++i) { result_1308622943.data[i] = {Field0: 0, Field1: {Field0: 0, Field1: 0}, Field2: {Field0: {Field0: 0, Field1: 0}, Field1: 0}}; }
  return result_1308622943;

}

function parentInd_1325400066(i_1325400067) {
  var result_1325400068 = 0;

    result_1325400068 = divInt(subInt(i_1325400067, 1), 2);

  return result_1325400068;

}

function hasParentAt_1308622994(h_1308622996, i_1308622997) {
  var result_1308622998 = false;

    result_1308622998 = (0 <= i_1308622997);

  return result_1308622998;

}

function propFulfilled_1308623006(h_1308623008, indParent_1308623009, indChild_1308623010) {
  var result_1308623011 = false;

    result_1308623011 = (h_1308623008.comp(h_1308623008.data[chckIndx(indParent_1308623009, 0, (h_1308623008.data).length - 1)], h_1308623008.data[chckIndx(indChild_1308623010, 0, (h_1308623008.data).length - 1)]) <= 0);

  return result_1308623011;

}

function swap_1308623021(h_1308623023, i_1308623024, j_1308623025) {
    var t_1308623026 = nimCopy(null, h_1308623023.data[chckIndx(j_1308623025, 0, (h_1308623023.data).length - 1)], NTI1308622851);
    h_1308623023.data[chckIndx(j_1308623025, 0, (h_1308623023.data).length - 1)] = nimCopy(h_1308623023.data[chckIndx(j_1308623025, 0, (h_1308623023.data).length - 1)], h_1308623023.data[chckIndx(i_1308623024, 0, (h_1308623023.data).length - 1)], NTI1308622851);
    h_1308623023.data[chckIndx(i_1308623024, 0, (h_1308623023.data).length - 1)] = nimCopy(h_1308623023.data[chckIndx(i_1308623024, 0, (h_1308623023.data).length - 1)], t_1308623026, NTI1308622851);

  
}

function siftup_1308622982(h_1308622984, i_1308622985) {
      var Temporary1;

    var j_1308622986 = parentInd_1325400066(i_1308622985);
      if (!hasParentAt_1308622994(h_1308622984, j_1308622986)) Temporary1 = false; else {        Temporary1 = !(propFulfilled_1308623006(h_1308622984, j_1308622986, i_1308622985));      }    if (Temporary1) {
    swap_1308623021(h_1308622984, i_1308622985, j_1308622986);
    siftup_1308622982(h_1308622984, j_1308622986);
    }
    

  
}

function push_1308622967(h_1308622969, x_1308622970) {
    var Temporary1 = nimCopy(null, x_1308622970, NTI1308622851);
    h_1308622969.data.push(Temporary1);;
    siftup_1308622982(h_1308622969, h_1308622969.size);
    h_1308622969.size = addInt(h_1308622969.size, 1);

  
}

function size_1308623053(h_1308623055) {
  var result_1308623056 = 0;

    result_1308623056 = h_1308623055.size;

  return result_1308623056;

}

function HEX5BHEX5D_1308623109(s_1308623111, i_1308623112) {
  var result_1308623113 = null;

    result_1308623113 = s_1308623111[chckIndx(subInt((s_1308623111).length, i_1308623112), 0, (s_1308623111).length - 1)];

  return result_1308623113;

}

function childLInd_1325400069(i_1325400070) {
  var result_1325400071 = 0;

    result_1325400071 = addInt(mulInt(2, i_1325400070), 1);

  return result_1325400071;

}

function childRInd_1325400072(i_1325400073) {
  var result_1325400074 = 0;

    result_1325400074 = addInt(mulInt(2, i_1325400073), 2);

  return result_1325400074;

}

function hasChildAt_1308623155(h_1308623157, i_1308623158) {
  var result_1308623159 = false;

    result_1308623159 = (i_1308623158 < h_1308623157.size);

  return result_1308623159;

}

function siftdown_1308623142(h_1308623144, i_1308623145) {
      var Temporary1;
      var Temporary2;

    var j_1308623146 = childLInd_1325400069(i_1308623145);
    var k_1308623147 = childRInd_1325400072(i_1308623145);
      if (!hasChildAt_1308623155(h_1308623144, j_1308623146)) Temporary1 = false; else {        Temporary1 = hasChildAt_1308623155(h_1308623144, k_1308623147);      }    if (Temporary1) {
      if (!(propFulfilled_1308623006(h_1308623144, i_1308623145, j_1308623146))) Temporary2 = true; else {        Temporary2 = !(propFulfilled_1308623006(h_1308623144, i_1308623145, k_1308623147));      }    if (Temporary2) {
    if (propFulfilled_1308623006(h_1308623144, j_1308623146, k_1308623147)) {
    swap_1308623021(h_1308623144, i_1308623145, j_1308623146);
    siftdown_1308623142(h_1308623144, j_1308623146);
    }
    else {
      swap_1308623021(h_1308623144, i_1308623145, k_1308623147);
      siftdown_1308623142(h_1308623144, k_1308623147);
    }
    
    }
    
    }
    else {
    if (hasChildAt_1308623155(h_1308623144, j_1308623146)) {
    if (!(propFulfilled_1308623006(h_1308623144, i_1308623145, j_1308623146))) {
    swap_1308623021(h_1308623144, i_1308623145, j_1308623146);
    siftdown_1308623142(h_1308623144, j_1308623146);
    }
    
    }
    }

  
}

function pop_1308623104(h_1308623106) {
  var result_1308623107 = {Field0: {Field0: 0, Field1: 0}, Field1: 0, Field2: 0};

    if ((0 < ~(h_1308623106.size))) {
    raiseException({message: makeNimstrLit("cannot pop element, heap is empty"), parent: null, m_type: NTI1325400073, name: null, trace: [], up: null}, "EmptyHeapError");
    }
    
    result_1308623107 = nimCopy(result_1308623107, h_1308623106.data[chckIndx(0, 0, (h_1308623106.data).length - 1)], NTI1308622851);
    h_1308623106.data[chckIndx(0, 0, (h_1308623106.data).length - 1)] = nimCopy(h_1308623106.data[chckIndx(0, 0, (h_1308623106.data).length - 1)], HEX5BHEX5D_1308623109(h_1308623106.data, 1), NTI1308622851);
    h_1308623106.size = subInt(h_1308623106.size, 1);
    if (h_1308623106.data.length < chckRange(h_1308623106.size, 0, 2147483647)) { for (var i = h_1308623106.data.length ; i < chckRange(h_1308623106.size, 0, 2147483647) ; ++i) h_1308623106.data.push({Field0: {Field0: 0, Field1: 0}, Field1: 0, Field2: 0}); }
               else { h_1308623106.data.length = chckRange(h_1308623106.size, 0, 2147483647); };
    siftdown_1308623142(h_1308623106, 0);

  return result_1308623107;

}

function HEX3DHEX3D_1308623331(x_1308623333, y_1308623334) {
  var result_1308623335 = false;

  BeforeRet: do {
    if (!((x_1308623333["Field0"] == y_1308623334["Field0"]))) {
    result_1308623335 = false;
    break BeforeRet;
    }
    
    if (!((x_1308623333["Field1"] == y_1308623334["Field1"]))) {
    result_1308623335 = false;
    break BeforeRet;
    }
    
    result_1308623335 = true;
    break BeforeRet;
  } while (false);

  return result_1308623335;

}

function hash_1308623413(x_1308623415) {
  var result_1308623416 = 0;

    result_1308623416 = HEX21HEX26_1207959555(result_1308623416, hash_1207959722(x_1308623415["Field0"]));
    result_1308623416 = HEX21HEX26_1207959555(result_1308623416, hash_1207959722(x_1308623415["Field1"]));
    result_1308623416 = HEX21HEX24_1207959570(result_1308623416);

  return result_1308623416;

}

function rawGet_1308623406(t_1308623409, key_1308623410, hc_1308623411, hc_1308623411_Idx) {
            var Temporary3;

  var result_1308623412 = 0;

  BeforeRet: do {
    hc_1308623411[hc_1308623411_Idx] = hash_1308623413(key_1308623410);
    if ((hc_1308623411[hc_1308623411_Idx] == 0)) {
    hc_1308623411[hc_1308623411_Idx] = 314159265;
    }
    
    if (((t_1308623409.data).length == 0)) {
    result_1308623412 = -1;
    break BeforeRet;
    }
    
    var h_1308623478 = (hc_1308623411[hc_1308623411_Idx] & (t_1308623409.data).length - 1);
    Label1: do {
        Label2: while (true) {
        if (!isFilled_1191182367(t_1308623409.data[chckIndx(h_1308623478, 0, (t_1308623409.data).length - 1)].Field0)) break Label2;
            if (!(t_1308623409.data[chckIndx(h_1308623478, 0, (t_1308623409.data).length - 1)].Field0 == hc_1308623411[hc_1308623411_Idx])) Temporary3 = false; else {              Temporary3 = HEX3DHEX3D_1308623331(t_1308623409.data[chckIndx(h_1308623478, 0, (t_1308623409.data).length - 1)].Field1, key_1308623410);            }          if (Temporary3) {
          result_1308623412 = h_1308623478;
          break BeforeRet;
          }
          
          h_1308623478 = nextTry_1191182370(h_1308623478, (t_1308623409.data).length - 1);
        }
    } while (false);
    result_1308623412 = subInt(-1, h_1308623478);
  } while (false);

  return result_1308623412;

}

function addQuoted_671089916(s_671089918, s_671089918_Idx, x_671089919) {
    addInt_251658457(s_671089918, s_671089918_Idx, x_671089919);

  
}

function HEX24_1308623746(x_1308623748) {
  var result_1308623749 = [[]];

    result_1308623749[0] = nimCopy(null, makeNimstrLit("("), NTI33554439);
    var count_1308623755 = 0;
    if ((0 < count_1308623755)) {
    result_1308623749[0].push.apply(result_1308623749[0], makeNimstrLit(", "));;
    }
    
    result_1308623749[0].push.apply(result_1308623749[0], makeNimstrLit("x"));;
    result_1308623749[0].push.apply(result_1308623749[0], makeNimstrLit(": "));;
    count_1308623755 += 1;
    addQuoted_671089916(result_1308623749, 0, x_1308623748["Field0"]);
    if ((0 < count_1308623755)) {
    result_1308623749[0].push.apply(result_1308623749[0], makeNimstrLit(", "));;
    }
    
    result_1308623749[0].push.apply(result_1308623749[0], makeNimstrLit("y"));;
    result_1308623749[0].push.apply(result_1308623749[0], makeNimstrLit(": "));;
    count_1308623755 += 1;
    addQuoted_671089916(result_1308623749, 0, x_1308623748["Field1"]);
    result_1308623749[0].push.apply(result_1308623749[0], makeNimstrLit(")"));;

  return result_1308623749[0];

}

function raiseKeyError_1308623708(key_1308623710) {
    raiseException({message: (makeNimstrLit("key not found: ") || []).concat(HEX24_1308623746(key_1308623710) || []), parent: null, m_type: NTI33555126, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_1308623399(t_1308623402, key_1308623403) {
  var result_1308623404 = null;

    var hcHEX60gensym22_1308623405 = [0];
    var indexHEX60gensym22_1308623654 = rawGet_1308623406(t_1308623402, key_1308623403, hcHEX60gensym22_1308623405, 0);
    if ((0 <= indexHEX60gensym22_1308623654)) {
    result_1308623404 = t_1308623402.data[chckIndx(indexHEX60gensym22_1308623654, 0, (t_1308623402.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_1308623708(key_1308623403);
    }
    

  return result_1308623404;

}

function inbounds_1073741870(x_1073741871, y_1073741872) {
    var Temporary1;
    var Temporary2;
    var Temporary3;

  var result_1073741873 = false;

  BeforeRet: do {
    if (!(0 <= x_1073741871)) Temporary3 = false; else {      Temporary3 = (x_1073741871 < 36);    }    if (!Temporary3) Temporary2 = false; else {      Temporary2 = (0 <= y_1073741872);    }    if (!Temporary2) Temporary1 = false; else {      Temporary1 = (y_1073741872 < 64);    }    result_1073741873 = Temporary1;
    break BeforeRet;
  } while (false);

  return result_1073741873;

}

function inbounds_1073741984(x_1073741985) {
  var result_1073741986 = false;

  BeforeRet: do {
    result_1073741986 = inbounds_1073741870(x_1073741985.Field0, x_1073741985.Field1);
    break BeforeRet;
  } while (false);

  return result_1073741986;

}

function find_1073741996(a_1073741999, item_1073742000) {
  var result_1073742001 = 0;

  BeforeRet: do {
    result_1073742001 = 0;
    Label1: do {
      var i_1073742014 = 0;
      var i_469762241 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_469762241 < (a_1073741999).length)) break Label3;
            i_1073742014 = a_1073741999[chckIndx(i_469762241, 0, (a_1073741999).length - 1)];
            if ((i_1073742014 == item_1073742000)) {
            break BeforeRet;
            }
            
            result_1073742001 = addInt(result_1073742001, 1);
            i_469762241 = addInt(i_469762241, 1);
          }
      } while (false);
    } while (false);
    result_1073742001 = -1;
  } while (false);

  return result_1073742001;

}

function contains_1073741991(a_1073741993, item_1073741994) {
  var result_1073741995 = false;

  BeforeRet: do {
    result_1073741995 = (0 <= find_1073741996(a_1073741993, item_1073741994));
    break BeforeRet;
  } while (false);

  return result_1073741995;

}

function get_1073741874(x_1073741875, y_1073741876) {
  var result_1073741877 = 0;

  BeforeRet: do {
    result_1073741877 = map_1073741869[0][chckIndx(addInt(x_1073741875, mulInt(36, y_1073741876)), 0, (map_1073741869[0]).length - 1)];
    break BeforeRet;
  } while (false);

  return result_1073741877;

}

function isInState_1073741987(v_1073741988, state_1073741989) {
    var Temporary1;

  var result_1073741990 = false;

    if (!inbounds_1073741984(v_1073741988)) Temporary1 = false; else {      Temporary1 = contains_1073741991(state_1073741989, get_1073741874(chckRange(v_1073741988.Field0, 0, 2147483647), chckRange(v_1073741988.Field1, 0, 2147483647)));    }    result_1073741990 = Temporary1;

  return result_1073741990;

}

function HEX2B_1073741980(a_1073741981, b_1073741982) {
  var result_1073741983 = {Field0: 0, Field1: 0};

  BeforeRet: do {
    var colontmp__469762243 = addInt(a_1073741981.Field0, b_1073741982.Field0);
    var colontmp__469762244 = addInt(a_1073741981.Field1, b_1073741982.Field1);
    result_1073741983 = nimCopy(result_1073741983, {Field0: colontmp__469762243, Field1: colontmp__469762244}, NTI1073741921);
    break BeforeRet;
  } while (false);

  return result_1073741983;

}

function HEX24_1073742230(x_1073742232) {
  var result_1073742233 = [[]];

    result_1073742233[0] = nimCopy(null, makeNimstrLit("("), NTI33554439);
    var count_1073742239 = 0;
    if ((0 < count_1073742239)) {
    result_1073742233[0].push.apply(result_1073742233[0], makeNimstrLit(", "));;
    }
    
    count_1073742239 += 1;
    addQuoted_671089916(result_1073742233, 0, x_1073742232["Field0"]);
    if ((0 < count_1073742239)) {
    result_1073742233[0].push.apply(result_1073742233[0], makeNimstrLit(", "));;
    }
    
    count_1073742239 += 1;
    addQuoted_671089916(result_1073742233, 0, x_1073742232["Field1"]);
    if ((count_1073742239 == 1)) {
    result_1073742233[0].push.apply(result_1073742233[0], makeNimstrLit(","));;
    }
    
    result_1073742233[0].push.apply(result_1073742233[0], makeNimstrLit(")"));;

  return result_1073742233[0];

}

function raiseKeyError_1073742192(key_1073742194) {
    raiseException({message: (makeNimstrLit("key not found: ") || []).concat(HEX24_1073742230(key_1073742194) || []), parent: null, m_type: NTI33555126, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_1073742125(t_1073742128, key_1073742129) {
  var result_1073742130 = null;
  var result_1073742130_Idx = 0;

    var hcHEX60gensym22_1073742131 = [0];
    var indexHEX60gensym22_1073742138 = rawGet_1174405258(t_1073742128, key_1073742129, hcHEX60gensym22_1073742131, 0);
    if ((0 <= indexHEX60gensym22_1073742138)) {
    result_1073742130 = t_1073742128.data[chckIndx(indexHEX60gensym22_1073742138, 0, (t_1073742128.data).length - 1)]; result_1073742130_Idx = "Field2";
    }
    else {
    raiseKeyError_1073742192(key_1073742129);
    }
    

  return [result_1073742130, result_1073742130_Idx];

}

function fsqrt_1073741973(x_1073741974) {
  var result_1073741975 = 0;

    result_1073741975 = (((Math.sqrt(x_1073741974) * 10.0)) | 0);

  return result_1073741975;

}

function hueristic_1073741969(a_1073741970) {
  var result_1073741971 = 0;

    result_1073741971 = addInt(mulInt(a_1073741970.Field0, a_1073741970.Field0), mulInt(a_1073741970.Field1, a_1073741970.Field1));

  return result_1073741971;

}

function hueristic_1073741976(a_1073741977, b_1073741978) {
  var result_1073741979 = 0;

    result_1073741979 = fsqrt_1073741973(hueristic_1073741969({Field0: subInt(a_1073741977.Field0, b_1073741978.Field0), Field1: subInt(a_1073741977.Field1, b_1073741978.Field1)}));

  return result_1073741979;

}

function cost_1073742033(a_1073742034, b_1073742035) {
  var result_1073742036 = 0;

  BeforeRet: do {
    result_1073742036 = hueristic_1073741976(a_1073742034, b_1073742035);
    break BeforeRet;
  } while (false);

  return result_1073742036;

}

function hasKey_1308623833(t_1308623836, key_1308623837) {
  var result_1308623838 = false;

    var hc_1308623839 = [0];
    result_1308623838 = (0 <= rawGet_1308623406(t_1308623836, key_1308623837, hc_1308623839, 0));

  return result_1308623838;

}

function mustRehash_1308624117(t_1308624119) {
  var result_1308624120 = false;

    if (!((t_1308624119.counter < (t_1308624119.data).length))) {
    failedAssertImpl_218103864(makeNimstrLit("hashcommon.nim(29, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_1308624120 = ((mulInt((t_1308624119.data).length, 2) < mulInt(t_1308624119.counter, 3)) || (subInt((t_1308624119.data).length, t_1308624119.counter) < 4));

  return result_1308624120;

}

function rawInsert_1308624566(t_1308624570, data_1308624571, data_1308624571_Idx, key_1308624572, val_1308624573, hc_1308624574, h_1308624575) {
    data_1308624571[data_1308624571_Idx][chckIndx(h_1308624575, 0, (data_1308624571[data_1308624571_Idx]).length - 1)].Field1 = nimCopy(data_1308624571[data_1308624571_Idx][chckIndx(h_1308624575, 0, (data_1308624571[data_1308624571_Idx]).length - 1)].Field1, key_1308624572, NTI1073741921);
    data_1308624571[data_1308624571_Idx][chckIndx(h_1308624575, 0, (data_1308624571[data_1308624571_Idx]).length - 1)].Field2 = nimCopy(data_1308624571[data_1308624571_Idx][chckIndx(h_1308624575, 0, (data_1308624571[data_1308624571_Idx]).length - 1)].Field2, val_1308624573, NTI1308622852);
    data_1308624571[data_1308624571_Idx][chckIndx(h_1308624575, 0, (data_1308624571[data_1308624571_Idx]).length - 1)].Field0 = hc_1308624574;

  
}

function enlarge_1308624272(t_1308624275) {
    var n_1308624278 = [];
    n_1308624278 = new Array(chckRange(mulInt((t_1308624275.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1308624275.data).length, 2), 0, 2147483647) ; ++i) { n_1308624278[i] = {Field0: 0, Field1: {Field0: 0, Field1: 0}, Field2: {Field0: {Field0: 0, Field1: 0}, Field1: 0}}; }    var Temporary1 = t_1308624275.data; t_1308624275.data = n_1308624278; n_1308624278 = Temporary1;    Label2: do {
      var i_1308624342 = 0;
      var colontmp__469762247 = 0;
      colontmp__469762247 = (n_1308624278).length - 1;
      var res_469762248 = 0;
      Label3: do {
          Label4: while (true) {
          if (!(res_469762248 <= colontmp__469762247)) break Label4;
            i_1308624342 = res_469762248;
            var eh_1308624396 = n_1308624278[chckIndx(i_1308624342, 0, (n_1308624278).length - 1)].Field0;
            if (isFilled_1191182367(eh_1308624396)) {
            var j_1308624400 = (eh_1308624396 & (t_1308624275.data).length - 1);
            Label5: do {
                Label6: while (true) {
                if (!isFilled_1191182367(t_1308624275.data[chckIndx(j_1308624400, 0, (t_1308624275.data).length - 1)].Field0)) break Label6;
                  j_1308624400 = nextTry_1191182370(j_1308624400, (t_1308624275.data).length - 1);
                }
            } while (false);
            rawInsert_1308624566(t_1308624275, t_1308624275, "data", n_1308624278[chckIndx(i_1308624342, 0, (n_1308624278).length - 1)].Field1, n_1308624278[chckIndx(i_1308624342, 0, (n_1308624278).length - 1)].Field2, eh_1308624396, j_1308624400);
            }
            
            res_469762248 = addInt(res_469762248, 1);
          }
      } while (false);
    } while (false);

  
}

function rawGetKnownHC_1308624744(t_1308624747, key_1308624748, hc_1308624749) {
  var result_1308624750 = 0;

  BeforeRet: do {
    if (((t_1308624747.data).length == 0)) {
    result_1308624750 = -1;
    break BeforeRet;
    }
    
    var h_1308624801 = (hc_1308624749 & (t_1308624747.data).length - 1);
    Label1: do {
        Label2: while (true) {
        if (!isFilled_1191182367(t_1308624747.data[chckIndx(h_1308624801, 0, (t_1308624747.data).length - 1)].Field0)) break Label2;
          if (((t_1308624747.data[chckIndx(h_1308624801, 0, (t_1308624747.data).length - 1)].Field0 == hc_1308624749) && HEX3DHEX3D_1308623331(t_1308624747.data[chckIndx(h_1308624801, 0, (t_1308624747.data).length - 1)].Field1, key_1308624748))) {
          result_1308624750 = h_1308624801;
          break BeforeRet;
          }
          
          h_1308624801 = nextTry_1191182370(h_1308624801, (t_1308624747.data).length - 1);
        }
    } while (false);
    result_1308624750 = subInt(-1, h_1308624801);
  } while (false);

  return result_1308624750;

}

function HEX5BHEX5DHEX3D_1308623944(t_1308623947, key_1308623948, val_1308623949) {
    if (((t_1308623947.data).length == 0)) {
    var correctSizeHEX60gensym12_1308623998 = slotsNeeded_1191182378(32);
    t_1308623947.counter = 0;
    t_1308623947.data = new Array(chckRange(correctSizeHEX60gensym12_1308623998, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym12_1308623998, 0, 2147483647) ; ++i) { t_1308623947.data[i] = {Field0: 0, Field1: {Field0: 0, Field1: 0}, Field2: {Field0: {Field0: 0, Field1: 0}, Field1: 0}}; }    }
    
    var hc_1308624003 = [0];
    var index_1308624010 = rawGet_1308623406(t_1308623947, key_1308623948, hc_1308624003, 0);
    if ((0 <= index_1308624010)) {
    t_1308623947.data[chckIndx(index_1308624010, 0, (t_1308623947.data).length - 1)].Field2 = nimCopy(t_1308623947.data[chckIndx(index_1308624010, 0, (t_1308623947.data).length - 1)].Field2, val_1308623949, NTI1308622852);
    }
    else {
      if (((t_1308623947.data).length == 0)) {
      var correctSizeHEX60gensym15_1308624112 = slotsNeeded_1191182378(32);
      t_1308623947.counter = 0;
      t_1308623947.data = new Array(chckRange(correctSizeHEX60gensym15_1308624112, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym15_1308624112, 0, 2147483647) ; ++i) { t_1308623947.data[i] = {Field0: 0, Field1: {Field0: 0, Field1: 0}, Field2: {Field0: {Field0: 0, Field1: 0}, Field1: 0}}; }      }
      
      if (mustRehash_1308624117(t_1308623947)) {
      enlarge_1308624272(t_1308623947);
      index_1308624010 = rawGetKnownHC_1308624744(t_1308623947, key_1308623948, hc_1308624003[0]);
      }
      
      index_1308624010 = subInt(-1, index_1308624010);
      rawInsert_1308624566(t_1308623947, t_1308623947, "data", key_1308623948, val_1308623949, hc_1308624003[0], index_1308624010);
      t_1308623947.counter = addInt(t_1308623947.counter, 1);
    }
    

  
}

function genPoints_469762096() {

function HEX3Aanonymous_1308622925(a_1308622926, b_1308622927) {
  var result_1308622928 = 0;

  BeforeRet: do {
    result_1308622928 = cmp_33557829(a_1308622926.Field1, b_1308622927.Field1);
    break BeforeRet;
  } while (false);

  return result_1308622928;

}
                          var Temporary14;
                          var Temporary17;

    points_469762095[0] = nimCopy(null, newSeq_469762087(0), NTI469762082);
    Label1: do {
      var i_469762104 = {Field0: 0, Field1: 0};
      var frontier_469762215 = [newHeap_1308622867(HEX3Aanonymous_1308622925)];
      var cameFrom_469762216 = [initTable_1308622934(32)];
      push_1308622967(frontier_469762215[0], {Field0: nimCopy(null, start_469762079[0], NTI1073741921), Field1: 0, Field2: 0});
      Label2: do {
          Label3: while (true) {
          if (!(0 < size_1308623053(frontier_469762215[0]))) break Label3;
            var current_469762218 = pop_1308623104(frontier_469762215[0]);
            if (HEX3DHEX3D_1308623331(current_469762218.Field0, goal_469762080[0])) {
            var c_469762219 = nimCopy(null, goal_469762080[0], NTI1073741921);
            Label4: do {
                Label5: while (true) {
                if (!!(HEX3DHEX3D_1308623331(c_469762219, start_469762079[0]))) break Label5;
                  i_469762104 = nimCopy(i_469762104, c_469762219, NTI1073741921);
                  var Temporary6 = nimCopy(null, i_469762104, NTI1073741921);
                  points_469762095[0].push(Temporary6);;
                  c_469762219 = nimCopy(c_469762219, HEX5BHEX5D_1308623399(cameFrom_469762216[0], c_469762219).Field0, NTI1073741921);
                }
            } while (false);
            i_469762104 = nimCopy(i_469762104, c_469762219, NTI1073741921);
            var Temporary7 = nimCopy(null, i_469762104, NTI1073741921);
            points_469762095[0].push(Temporary7);;
            break Label2;
            }
            
            Label8: do {
              var next_469762222 = {Field0: 0, Field1: 0};
              Label9: do {
                var i_469762224 = {Field0: 0, Field1: 0};
                var i_469762225 = 0;
                var L_469762226 = (surroundingPoints_1174405152[0]).length;
                Label10: do {
                    Label11: while (true) {
                    if (!(i_469762225 < L_469762226)) break Label11;
                      i_469762224 = surroundingPoints_1174405152[0][chckIndx(i_469762225, 0, (surroundingPoints_1174405152[0]).length - 1)];
                      Label12: do {
                        if (!(isInState_1073741987(HEX2B_1073741980(current_469762218.Field0, i_469762224), [0]))) {
                        break Label12;
                        }
                        
                        var badBoy_469762229 = false;
                        Label13: do {
                          var b_469762231 = {Field0: 0, Field1: 0};
                          var colontmp__469762232 = [];
                          colontmp__469762232 = (Temporary14 = HEX5BHEX5D_1073742125(pointTable_1174405147[0], i_469762224), Temporary14)[0][Temporary14[1]];
                          var i_469762233 = 0;
                          var L_469762234 = (colontmp__469762232).length;
                          Label15: do {
                              Label16: while (true) {
                              if (!(i_469762233 < L_469762234)) break Label16;
                                b_469762231 = colontmp__469762232[chckIndx(i_469762233, 0, (colontmp__469762232).length - 1)];
                                if (!(isInState_1073741987(HEX2B_1073741980(current_469762218.Field0, b_469762231), notWall_1073742037))) {
                                badBoy_469762229 = true;
                                break Label13;
                                }
                                
                                i_469762233 = addInt(i_469762233, 1);
                                if (!(((colontmp__469762232).length == L_469762234))) {
                                failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                                }
                                
                              }
                          } while (false);
                        } while (false);
                        if (badBoy_469762229) {
                        break Label12;
                        }
                        
                        next_469762222 = nimCopy(next_469762222, HEX2B_1073741980(current_469762218.Field0, i_469762224), NTI1073741921);
                        var cost_469762236 = addInt(current_469762218.Field2, cost_1073742033(current_469762218.Field0, next_469762222));
                          if (!(hasKey_1308623833(cameFrom_469762216[0], next_469762222))) Temporary17 = true; else {                            Temporary17 = (cost_469762236 < HEX5BHEX5D_1308623399(cameFrom_469762216[0], next_469762222).Field1);                          }                        if (Temporary17) {
                        HEX5BHEX5DHEX3D_1308623944(cameFrom_469762216[0], next_469762222, {Field0: nimCopy(null, current_469762218.Field0, NTI1073741921), Field1: cost_469762236});
                        var priority_469762237 = addInt(cost_469762236, hueristic_1073741976(next_469762222, goal_469762080[0]));
                        push_1308622967(frontier_469762215[0], {Field0: nimCopy(null, next_469762222, NTI1073741921), Field1: priority_469762237, Field2: cost_469762236});
                        }
                        
                      } while (false);
                      i_469762225 = addInt(i_469762225, 1);
                      if (!(((surroundingPoints_1174405152[0]).length == L_469762226))) {
                      failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                } while (false);
              } while (false);
            } while (false);
          }
      } while (false);
    } while (false);

  
}

function handleClick_469762135(ev_469762136) {
    var mev_469762137 = ev_469762136;
    var p_469762138 = mapToMap_469762131(mev_469762137.x, mev_469762137.y);
    if ((progress_469762081[0] == 0)) {
    progress_469762081[0] = 1;
    start_469762079[0] = nimCopy(start_469762079[0], p_469762138, NTI1073741921);
    }
    else {
      progress_469762081[0] = 0;
      goal_469762080[0] = nimCopy(goal_469762080[0], p_469762138, NTI1073741921);
      genPoints_469762096();
    }
    

  
}
document.addEventListener("click", handleClick_469762135, false);
var drawCalls_469762157 = [0];

function rotl_1090519071(x_1090519072, k_1090519073) {
  var result_1090519074 = 0;

    result_1090519074 = ((x_1090519072 << k_1090519073) | (x_1090519072 >>> ((64 - k_1090519073) >>> 0)));

  return result_1090519074;

}

function next_1090519083(r_1090519084) {
  var result_1090519085 = 0;

    var s0_1090519086 = r_1090519084.a0;
    var s1_1090519087 = r_1090519084.a1;
    result_1090519085 = ((s0_1090519086 + s1_1090519087) >>> 0);
    s1_1090519087 = (s1_1090519087 ^ s0_1090519086);
    r_1090519084.a0 = ((rotl_1090519071(s0_1090519086, 55) ^ s1_1090519087) ^ (s1_1090519087 << 14));
    r_1090519084.a1 = rotl_1090519071(s1_1090519087, 36);

  return result_1090519085;

}

function rand_1073741929(r_1073741931, max_1073741932) {
  var result_1073741933 = 0;

  BeforeRet: do {
    if ((max_1073741932 == 0)) {
    break BeforeRet;
    }
    else {
      var max_1073741934 = max_1073741932;
      Label1: do {
          Label2: while (true) {
          if (!true) break Label2;
            var x_1073741943 = next_1090519083(r_1073741931);
            if ((x_1073741943 <= ((4294967295 - (4294967295 % max_1073741934)) ))) {
            result_1073741933 = (x_1073741943 % ((max_1073741934 + 1) ));
            break BeforeRet;
            }
            
          }
      } while (false);
    }
    
  } while (false);

  return result_1073741933;

}

function rand_1073741918(r_1073741920, x_1073741921) {
  var result_1073741922 = 0;

    if (!((x_1073741921.a <= x_1073741921.b))) {
    failedAssertImpl_218103864(makeNimstrLit("random.nim(325, 10) `x.a <= x.b` "));
    }
    
    result_1073741922 = (((rand_1073741929(r_1073741920, (((x_1073741921.b >>> 0) - (x_1073741921.a >>> 0)) >>> 0)) + (x_1073741921.a >>> 0)) >>> 0) | 0);

  return result_1073741922;

}

function rand_1073741910(x_1073741912) {
  var result_1073741913 = 0;

    result_1073741913 = rand_1073741918(state_1090519053[0], x_1073741912);

  return result_1073741913;

}

function HEX2EHEX2E_956302163(a_956302166, b_956302167) {
  var result_956302168 = ({a: 0, b: 0});

    result_956302168 = nimCopy(result_956302168, {a: a_956302166, b: b_956302167}, NTI704643133);

  return result_956302168;

}

function set_1073741878(x_1073741879, y_1073741880, data_1073741881) {
    map_1073741869[0][chckIndx(addInt(x_1073741879, mulInt(36, y_1073741880)), 0, (map_1073741869[0]).length - 1)] = data_1073741881;

  
}

function genMap_1073741890() {
    Label1: do {
      var x_1073741895 = 0;
      var i_469762304 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_469762304 < 36)) break Label3;
            x_1073741895 = i_469762304;
            Label4: do {
              var y_1073741900 = 0;
              var i_469762302 = 0;
              Label5: do {
                  Label6: while (true) {
                  if (!(i_469762302 < 64)) break Label6;
                    y_1073741900 = i_469762302;
                    var c_1073741944 = rand_1073741910(HEX2EHEX2E_956302163(0, 20));
                    var r_1073741945 = 0;
                    if ((c_1073741944 < 4)) {
                    r_1073741945 = 1;
                    }
                    else {
                    if ((c_1073741944 == 8)) {
                    r_1073741945 = 2;
                    }
                    }
                    set_1073741878(chckRange(x_1073741895, 0, 2147483647), chckRange(y_1073741900, 0, 2147483647), r_1073741945);
                    i_469762302 = addInt(i_469762302, 1);
                  }
              } while (false);
            } while (false);
            i_469762304 = addInt(i_469762304, 1);
          }
      } while (false);
    } while (false);

  
}

function resize_469762078() {
    cvs_469762056[0].width = window.innerWidth;
    cvs_469762056[0].height = window.innerHeight;
    w_469762057[0] = cvs_469762056[0].width;
    h_469762058[0] = cvs_469762056[0].height;

  
}

function parseSaturatedNatural_687866190(s_687866191, b_687866192, b_687866192_Idx, start_687866193) {
      var Temporary1;
          var Temporary4;

  var result_687866194 = 0;

    var i_687866195 = start_687866193;
    if (((i_687866195 < (s_687866191).length) && (s_687866191[chckIndx(i_687866195, 0, (s_687866191).length - 1)] == 43))) {
    i_687866195 = addInt(i_687866195, 1);
    }
    
      if (!(i_687866195 < (s_687866191).length)) Temporary1 = false; else {        Temporary1 = (ConstSet6[s_687866191[chckIndx(i_687866195, 0, (s_687866191).length - 1)]] != undefined);      }    if (Temporary1) {
    b_687866192[b_687866192_Idx] = 0;
    Label2: do {
        Label3: while (true) {
          if (!(i_687866195 < (s_687866191).length)) Temporary4 = false; else {            Temporary4 = (ConstSet7[s_687866191[chckIndx(i_687866195, 0, (s_687866191).length - 1)]] != undefined);          }        if (!Temporary4) break Label3;
          var c_687866214 = subInt(s_687866191[chckIndx(i_687866195, 0, (s_687866191).length - 1)], 48);
          if ((b_687866192[b_687866192_Idx] <= divInt(subInt(2147483647, c_687866214), 10))) {
          b_687866192[b_687866192_Idx] = addInt(mulInt(b_687866192[b_687866192_Idx], 10), c_687866214);
          }
          else {
            b_687866192[b_687866192_Idx] = 2147483647;
          }
          
          i_687866195 = addInt(i_687866195, 1);
          Label5: do {
              Label6: while (true) {
              if (!((i_687866195 < (s_687866191).length) && (s_687866191[chckIndx(i_687866195, 0, (s_687866191).length - 1)] == 95))) break Label6;
                i_687866195 = addInt(i_687866195, 1);
              }
          } while (false);
        }
    } while (false);
    result_687866194 = subInt(i_687866195, start_687866193);
    }
    

  return result_687866194;

}

function HEX5BHEX5D_956304538(s_956304541, x_956304542) {
  var result_956304543 = [];

    var a_956304545 = x_956304542.a;
    var L_956304547 = addInt(subInt(subInt((s_956304541).length, x_956304542.b), a_956304545), 1);
    result_956304543 = nimCopy(null, mnewString(chckRange(L_956304547, 0, 2147483647)), NTI33554439);
    Label1: do {
      var i_956304552 = 0;
      var i_469762310 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_469762310 < L_956304547)) break Label3;
            i_956304552 = i_469762310;
            result_956304543[chckIndx(i_956304552, 0, (result_956304543).length - 1)] = s_956304541[chckIndx(addInt(i_956304552, a_956304545), 0, (s_956304541).length - 1)];
            i_469762310 = addInt(i_469762310, 1);
          }
      } while (false);
    } while (false);

  return result_956304543;

}

function HEX2EHEX2E_889192528(a_889192531, b_889192532) {
  var result_889192535 = ({a: 0, b: 0});

    result_889192535 = nimCopy(result_889192535, {a: a_889192531, b: b_889192532}, NTI889192527);

  return result_889192535;

}

function parseStandardFormatSpecifier_1040187450(s_1040187451, start_1040187452, ignoreUnknownSuffix_1040187453) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_1040187454 = ({fill: 0, align: 0, sign: 0, alternateForm: false, padWithZero: false, minimumWidth: 0, precision: 0, typ: 0, endPosition: 0});

    result_1040187454.fill = 32;
    result_1040187454.align = 0;
    result_1040187454.sign = 45;
    var i_1040187456 = start_1040187452;
    if (((addInt(i_1040187456, 1) < (s_1040187451).length) && (ConstSet2[s_1040187451[chckIndx(addInt(i_1040187456, 1), 0, (s_1040187451).length - 1)]] != undefined))) {
    result_1040187454.fill = s_1040187451[chckIndx(i_1040187456, 0, (s_1040187451).length - 1)];
    result_1040187454.align = s_1040187451[chckIndx(addInt(i_1040187456, 1), 0, (s_1040187451).length - 1)];
    i_1040187456 = addInt(i_1040187456, 2);
    }
    else {
    if (((i_1040187456 < (s_1040187451).length) && (ConstSet3[s_1040187451[chckIndx(i_1040187456, 0, (s_1040187451).length - 1)]] != undefined))) {
    result_1040187454.align = s_1040187451[chckIndx(i_1040187456, 0, (s_1040187451).length - 1)];
    i_1040187456 = addInt(i_1040187456, 1);
    }
    }
    if (((i_1040187456 < (s_1040187451).length) && (ConstSet4[s_1040187451[chckIndx(i_1040187456, 0, (s_1040187451).length - 1)]] != undefined))) {
    result_1040187454.sign = s_1040187451[chckIndx(i_1040187456, 0, (s_1040187451).length - 1)];
    i_1040187456 = addInt(i_1040187456, 1);
    }
    
    if (((i_1040187456 < (s_1040187451).length) && (s_1040187451[chckIndx(i_1040187456, 0, (s_1040187451).length - 1)] == 35))) {
    result_1040187454.alternateForm = true;
    i_1040187456 = addInt(i_1040187456, 1);
    }
    
      if (!((addInt(i_1040187456, 1) < (s_1040187451).length) && (s_1040187451[chckIndx(i_1040187456, 0, (s_1040187451).length - 1)] == 48))) Temporary1 = false; else {        Temporary1 = (ConstSet5[s_1040187451[chckIndx(addInt(i_1040187456, 1), 0, (s_1040187451).length - 1)]] != undefined);      }    if (Temporary1) {
    result_1040187454.padWithZero = true;
    i_1040187456 = addInt(i_1040187456, 1);
    }
    
    var parsedLength_1040187493 = parseSaturatedNatural_687866190(s_1040187451, result_1040187454, "minimumWidth", i_1040187456);
    i_1040187456 = addInt(i_1040187456, parsedLength_1040187493);
    if (((i_1040187456 < (s_1040187451).length) && (s_1040187451[chckIndx(i_1040187456, 0, (s_1040187451).length - 1)] == 46))) {
    i_1040187456 = addInt(i_1040187456, 1);
    var parsedLengthB_1040187502 = parseSaturatedNatural_687866190(s_1040187451, result_1040187454, "precision", i_1040187456);
    i_1040187456 = addInt(i_1040187456, parsedLengthB_1040187502);
    }
    else {
      result_1040187454.precision = -1;
    }
    
      if (!(i_1040187456 < (s_1040187451).length)) Temporary2 = false; else {        Temporary2 = (ConstSet8[s_1040187451[chckIndx(i_1040187456, 0, (s_1040187451).length - 1)]] != undefined);      }    if (Temporary2) {
    result_1040187454.typ = s_1040187451[chckIndx(i_1040187456, 0, (s_1040187451).length - 1)];
    i_1040187456 = addInt(i_1040187456, 1);
    }
    
    result_1040187454.endPosition = i_1040187456;
      if (!!((i_1040187456 == (s_1040187451).length))) Temporary3 = false; else {        Temporary3 = !(ignoreUnknownSuffix_1040187453);      }    if (Temporary3) {
    raiseException({message: (makeNimstrLit("invalid format string, cannot parse: ") || []).concat(HEX5BHEX5D_956304538(s_1040187451, HEX2EHEX2E_889192528(i_1040187456, 1)) || []), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_1040187454;

}

function mkDigit_1040187397(v_1040187398, typ_1040187399) {
      var Temporary1;

  var result_1040187400 = [];

    if (!((v_1040187398 < 26))) {
    failedAssertImpl_218103864(makeNimstrLit("strformat.nim(320, 9) `v < 26` "));
    }
    
    if ((v_1040187398 < 10)) {
    result_1040187400 = nimCopy(null, nimCharToStr(chckRange(addInt(48, v_1040187398), 0, 255)), NTI33554439);
    }
    else {
      if ((typ_1040187399 == 120)) {
      Temporary1 = 97;
      }
      else {
      Temporary1 = 65;
      }
      
      result_1040187400 = nimCopy(null, nimCharToStr(chckRange(subInt(addInt(Temporary1, v_1040187398), 10), 0, 255)), NTI33554439);
    }
    

  return result_1040187400;

}

function nsuRepeatChar(c_671089659, count_671089660) {
  var result_671089661 = [];

    result_671089661 = nimCopy(null, mnewString(count_671089660), NTI33554439);
    Label1: do {
      var i_671089666 = 0;
      var colontmp__469762322 = 0;
      colontmp__469762322 = subInt(count_671089660, 1);
      var res_469762323 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(res_469762323 <= colontmp__469762322)) break Label3;
            i_671089666 = res_469762323;
            result_671089661[chckIndx(i_671089666, 0, (result_671089661).length - 1)] = c_671089659;
            res_469762323 = addInt(res_469762323, 1);
          }
      } while (false);
    } while (false);

  return result_671089661;

}

function formatInt_1023410214(n_1023410216, radix_1023410217, spec_1023410218) {
    var Temporary1;
    var Temporary8;

  var result_1023410219 = [];

    var n_1023410222 = n_1023410216;
    var negative_1023410223 = (n_1023410222 < 0);
    if (negative_1023410223) {
    Temporary1 = ((~(n_1023410222) + 1) );
    }
    else {
    Temporary1 = n_1023410222;
    }
    
    var v_1023410224 = Temporary1;
    var xx_1023410225 = [];
    if (spec_1023410218.alternateForm) {
    switch (spec_1023410218.typ) {
    case 88:
      xx_1023410225 = nimCopy(null, makeNimstrLit("0x"), NTI33554439);
      break;
    case 120:
      xx_1023410225 = nimCopy(null, makeNimstrLit("0x"), NTI33554439);
      break;
    case 98:
      xx_1023410225 = nimCopy(null, makeNimstrLit("0b"), NTI33554439);
      break;
    case 111:
      xx_1023410225 = nimCopy(null, makeNimstrLit("0o"), NTI33554439);
      break;
    default: 
      break;
    }
    }
    
    if ((v_1023410224 == 0)) {
    result_1023410219 = nimCopy(null, makeNimstrLit("0"), NTI33554439);
    }
    else {
      result_1023410219 = nimCopy(null, [], NTI33554439);
      Label2: do {
          Label3: while (true) {
          if (!(0 < v_1023410224)) break Label3;
            var d_1023410226 = (v_1023410224 % radix_1023410217);
            v_1023410224 = Math.trunc(((v_1023410224 / radix_1023410217) ));
            result_1023410219.push.apply(result_1023410219, mkDigit_1040187397(chckRange(d_1023410226, -2147483648, 2147483647), spec_1023410218.typ));;
          }
      } while (false);
      Label4: do {
        var idx_1023410231 = 0;
        var colontmp__469762314 = 0;
        colontmp__469762314 = divInt((result_1023410219).length, 2);
        var i_469762315 = 0;
        Label5: do {
            Label6: while (true) {
            if (!(i_469762315 < colontmp__469762314)) break Label6;
              idx_1023410231 = i_469762315;
              var Temporary7 = result_1023410219[chckIndx(idx_1023410231, 0, (result_1023410219).length - 1)]; result_1023410219[chckIndx(idx_1023410231, 0, (result_1023410219).length - 1)] = result_1023410219[chckIndx(subInt(subInt((result_1023410219).length, idx_1023410231), 1), 0, (result_1023410219).length - 1)]; result_1023410219[chckIndx(subInt(subInt((result_1023410219).length, idx_1023410231), 1), 0, (result_1023410219).length - 1)] = Temporary7;              i_469762315 = addInt(i_469762315, 1);
            }
        } while (false);
      } while (false);
    }
    
    if (spec_1023410218.padWithZero) {
    if (negative_1023410223) Temporary8 = true; else {      Temporary8 = !((spec_1023410218.sign == 45));    }    var sign_1023410236 = Temporary8;
    var toFill_1023410240 = subInt(subInt(subInt(spec_1023410218.minimumWidth, (result_1023410219).length), (xx_1023410225).length), (sign_1023410236 ? 1 : 0));
    if ((0 < toFill_1023410240)) {
    result_1023410219 = nimCopy(null, (nsuRepeatChar(48, chckRange(toFill_1023410240, 0, 2147483647)) || []).concat(result_1023410219 || []), NTI33554439);
    }
    
    }
    
    if (negative_1023410223) {
    result_1023410219 = nimCopy(null, (makeNimstrLit("-") || []).concat(xx_1023410225 || [],result_1023410219 || []), NTI33554439);
    }
    else {
    if (!((spec_1023410218.sign == 45))) {
    result_1023410219 = nimCopy(null, [spec_1023410218.sign].concat(xx_1023410225 || [],result_1023410219 || []), NTI33554439);
    }
    else {
      result_1023410219 = nimCopy(null, (xx_1023410225 || []).concat(result_1023410219 || []), NTI33554439);
    }
    }
    if ((spec_1023410218.align == 60)) {
    Label9: do {
      var i_1023410245 = 0;
      var colontmp__469762318 = 0;
      colontmp__469762318 = (result_1023410219).length;
      var i_469762319 = colontmp__469762318;
      Label10: do {
          Label11: while (true) {
          if (!(i_469762319 < spec_1023410218.minimumWidth)) break Label11;
            i_1023410245 = i_469762319;
            addChar(result_1023410219, spec_1023410218.fill);;
            i_469762319 = addInt(i_469762319, 1);
          }
      } while (false);
    } while (false);
    }
    else {
      var toFill_1023410246 = subInt(spec_1023410218.minimumWidth, (result_1023410219).length);
      if ((spec_1023410218.align == 94)) {
      var half_1023410247 = divInt(toFill_1023410246, 2);
      result_1023410219 = nimCopy(null, (nsuRepeatChar(spec_1023410218.fill, chckRange(half_1023410247, 0, 2147483647)) || []).concat(result_1023410219 || [],nsuRepeatChar(spec_1023410218.fill, chckRange(subInt(toFill_1023410246, half_1023410247), 0, 2147483647)) || []), NTI33554439);
      }
      else {
        if ((0 < toFill_1023410246)) {
        result_1023410219 = nimCopy(null, (nsuRepeatChar(spec_1023410218.fill, chckRange(toFill_1023410246, 0, 2147483647)) || []).concat(result_1023410219 || []), NTI33554439);
        }
        
      }
      
    }
    

  return result_1023410219;

}

function formatValue_1023410206(result_1023410208, result_1023410208_Idx, value_1023410209, specifier_1023410210) {
  BeforeRet: do {
    if (((specifier_1023410210).length == 0)) {
    result_1023410208[result_1023410208_Idx].push.apply(result_1023410208[result_1023410208_Idx], HEX24_335544323(value_1023410209));;
    break BeforeRet;
    }
    
    var spec_1023410211 = parseStandardFormatSpecifier_1040187450(specifier_1023410210, 0, false);
    var radix_1023410212 = 10;
    switch (spec_1023410211.typ) {
    case 120:
    case 88:
      radix_1023410212 = 16;
      break;
    case 100:
    case 0:
      break;
    case 98:
      radix_1023410212 = 2;
      break;
    case 111:
      radix_1023410212 = 8;
      break;
    default: 
      raiseException({message: (makeNimstrLit("invalid type in format string for number, expected one  of \'x\', \'X\', \'b\', \'d\', \'o\' but got: ") || []).concat([spec_1023410211.typ]), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    result_1023410208[result_1023410208_Idx].push.apply(result_1023410208[result_1023410208_Idx], formatInt_1023410214(value_1023410209, radix_1023410212, spec_1023410211));;
  } while (false);

  
}

function fill_1023410191(r_1023410192, g_1023410193, b_1023410194, a_1023410195) {
    var fmtRes_1023410200 = [mnewString(0)];
    fmtRes_1023410200[0].push.apply(fmtRes_1023410200[0], makeNimstrLit("rgba("));;
    formatValue_1023410206(fmtRes_1023410200, 0, r_1023410192, []);
    fmtRes_1023410200[0].push.apply(fmtRes_1023410200[0], makeNimstrLit(","));;
    formatValue_1023410206(fmtRes_1023410200, 0, g_1023410193, []);
    fmtRes_1023410200[0].push.apply(fmtRes_1023410200[0], makeNimstrLit(","));;
    formatValue_1023410206(fmtRes_1023410200, 0, b_1023410194, []);
    fmtRes_1023410200[0].push.apply(fmtRes_1023410200[0], makeNimstrLit(","));;
    formatValue_1023410206(fmtRes_1023410200, 0, a_1023410195, []);
    ctx_1023410179[0].fillStyle = toJSStr(fmtRes_1023410200[0]);

  
}

function rect_1023410272(x_1023410273, y_1023410274, w_1023410275, h_1023410276) {
    ctx_1023410179[0].fillRect(x_1023410273, y_1023410274, w_1023410275, h_1023410276);

  
}

function clear_1023410294() {
    rect_1023410272(0, 0, ctx_1023410179[0].canvas.width, ctx_1023410179[0].canvas.height);

  
}

function clear_1023410295(r_1023410296, g_1023410297, b_1023410298, a_1023410299) {
    fill_1023410191(r_1023410296, g_1023410297, b_1023410298, a_1023410299);
    clear_1023410294();

  
}

function clear_1023410304(c_1023410305, a_1023410306) {
    clear_1023410295(c_1023410305, c_1023410305, c_1023410305, a_1023410306);

  
}

function clear_1023410307(c_1023410308) {
    clear_1023410304(c_1023410308, 255);

  
}

function min_33556194(x_33556195, y_33556196) {
    var Temporary1;
      var Temporary2;

  var result_33556197 = 0.0;

      if ((x_33556195 <= y_33556196)) Temporary2 = true; else {        Temporary2 = !((y_33556196 == y_33556196));      }    if (Temporary2) {
    Temporary1 = x_33556195;
    }
    else {
    Temporary1 = y_33556196;
    }
    
    result_33556197 = Temporary1;

  return result_33556197;

}

function toFloat_33556001(i_33556002) {
  var result_33556003 = 0.0;

    result_33556003 = i_33556002;

  return result_33556003;

}

function HEX2F_33557576(x_33557577, y_33557578) {
  var result_33557579 = 0.0;

    result_33557579 = (toFloat_33556001(x_33557577) / toFloat_33556001(y_33557578));

  return result_33557579;

}

function renderMap_1073741946(ctx_1073741947) {
  var result_1073741948 = 0.0;

  BeforeRet: do {
    var sw_1073741950 = min_33556194(HEX2F_33557576(ctx_1073741947.canvas.width, 36), HEX2F_33557576(ctx_1073741947.canvas.height, 64));
    var s_1073741951 = addInt(((sw_1073741950) | 0), 1);
    Label1: do {
      var x_1073741956 = 0;
      var i_469762329 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_469762329 < 36)) break Label3;
            x_1073741956 = i_469762329;
            Label4: do {
              var y_1073741961 = 0;
              var i_469762327 = 0;
              Label5: do {
                  Label6: while (true) {
                  if (!(i_469762327 < 64)) break Label6;
                    y_1073741961 = i_469762327;
                    var cx_1073741962 = (((sw_1073741950 * x_1073741956)) | 0);
                    var cy_1073741963 = (((sw_1073741950 * y_1073741961)) | 0);
                    ctx_1073741947.fillStyle = toJSStr(colors_1073741949[chckIndx(((get_1073741874(chckRange(x_1073741956, 0, 2147483647), chckRange(y_1073741961, 0, 2147483647))) | 0), 0, (colors_1073741949).length - 1)]);
                    rect_1023410272(cx_1073741962, cy_1073741963, s_1073741951, s_1073741951);
                    i_469762327 = addInt(i_469762327, 1);
                  }
              } while (false);
            } while (false);
            i_469762329 = addInt(i_469762329, 1);
          }
      } while (false);
    } while (false);
    result_1073741948 = sw_1073741950;
    break BeforeRet;
  } while (false);

  return result_1073741948;

}

function calPoint_469762109(a_469762110) {
  var result_469762111 = {Field0: 0, Field1: 0};

  BeforeRet: do {
    var cx_469762112 = ((a_469762110.Field0 + 0.5) * s_469762082[0]);
    var cy_469762113 = ((a_469762110.Field1 + 0.5) * s_469762082[0]);
    var colontmp__469762331 = ((cx_469762112) | 0);
    var colontmp__469762332 = ((cy_469762113) | 0);
    result_469762111 = nimCopy(result_469762111, {Field0: colontmp__469762331, Field1: colontmp__469762332}, NTI1073741921);
    break BeforeRet;
  } while (false);

  return result_469762111;

}

function line_469762114(a_469762115, b_469762116) {
    var ap_469762117 = calPoint_469762109(a_469762115);
    var bp_469762118 = calPoint_469762109(b_469762116);
    ctx_469762059[0].moveTo(ap_469762117.Field0, ap_469762117.Field1);
    ctx_469762059[0].lineTo(bp_469762118.Field0, bp_469762118.Field1);
    ctx_469762059[0].stroke();

  
}

function draw_469762251() {
    if ((drawCalls_469762157[0] == 30)) {
    genMap_1073741890();
    }
    
    resize_469762078();
    clear_1023410307(0);
    s_469762082[0] = renderMap_1073741946(ctx_469762059[0]);
    Label1: do {
      var i_469762259 = 0;
      var colontmp__469762297 = 0;
      colontmp__469762297 = (points_469762095[0]).length - 1;
      var i_469762298 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_469762298 < colontmp__469762297)) break Label3;
            i_469762259 = i_469762298;
            line_469762114(points_469762095[0][chckIndx(i_469762259, 0, (points_469762095[0]).length - 1)], points_469762095[0][chckIndx(addInt(i_469762259, 1), 0, (points_469762095[0]).length - 1)]);
            i_469762298 = addInt(i_469762298, 1);
          }
      } while (false);
    } while (false);
    drawCalls_469762157[0] = modInt(addInt(drawCalls_469762157[0], 1), 60);

  
}
var _ = setInterval(draw_469762251, 250);
